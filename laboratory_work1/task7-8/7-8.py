# Функция для генерации первых N частичных сумм ряда Фибоначчи
def fibonacci_sums(N):
    # Вложенная функция для генерации бесконечной последовательности чисел Фибоначчи
    def fibonacci():
        a, b = 1, 1  # Первые два числа Фибоначчи
        while True:
            yield a  # Возвращаем текущее число Фибоначчи
            a, b = b, a + b  # Обновляем значения для следующего числа

    # Вложенная функция для вычисления частичных сумм ряда Фибоначчи
    def partial_sums():
        sum_so_far = 0  # Переменная для хранения текущей суммы
        fib_gen = fibonacci()  # Получаем генератор чисел Фибоначчи
        for _ in range(N):
            current_fib = next(fib_gen)  # Получаем следующее число Фибоначчи
            sum_so_far += current_fib  # Добавляем его к текущей сумме
            yield sum_so_far  # Возвращаем частичную сумму

    # Возвращаем генератор частичных сумм
    return partial_sums()


# Функция для подсчёта количества значащих цифр в числе
def count_significant_digits(number):
    # Преобразуем число в строку и убираем незначащие нули слева
    return len(str(number).lstrip('0'))


# Функция для поиска индекса элемента, у которого количество значащих цифр больше заданного
def find_index_with_significant_digits(limit_digits, N):
    iterator = fibonacci_sums(N)  # Получаем генератор частичных сумм
    index = 0  # Начальный индекс

    # Проходим по всем значениям в генераторе
    for value in iterator:
        # Если количество значащих цифр больше указанного предела
        if count_significant_digits(value) > limit_digits:
            return index  # Возвращаем индекс элемента
        index += 1  # Увеличиваем индекс на 1

    return None  # Если элемент не найден, возвращаем None


# Задаём количество значащих цифр, которое мы ищем
number_of_significant_digits = 5

# Количество частичных сумм для вывода
N = 5

# Получаем генератор частичных сумм
iterator = fibonacci_sums(N)

# Выводим первые N частичных сумм
print("---------------------------------------")
print("Задание 7: Частичные суммы ряда Фибоначчи")
print("Первые", N, "частичных сумм ряда Фибоначчи (начиная с 1):")
for value in iterator:
    print(value)  # Выводим каждую частичную сумму
print("---------------------------------------")

# Поиск индекса первого элемента с количеством значащих цифр больше указанного предела
index = find_index_with_significant_digits(number_of_significant_digits, 100)

# Выводим индекс найденного элемента
print("Задание 8: Поиск по индексу элемента, содержащего более, чем заданное число значащих цифр")
print("Индекс первого элемента с более чем", number_of_significant_digits, "значащими цифрами:", index)
print("---------------------------------------")
